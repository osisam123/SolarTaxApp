@page "/editstate/{StateId}"
@using SolarTaxApp.Client.ViewModels
@inject IStateViewModel stateViewModel
@using BlazorInputFile
@using System.IO

<div class="col-9">
    <h5>Edit State / Country</h5>
    <EditForm Model="stateViewModel.Country_" OnSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <table width="100%" cellpadding="0" cellspacing="0" border="0">
            <tbody>
                <tr>
                    <td>
                        <label for="statecode" class="control-label">
                            State Code
                        </label>
                    </td>
                    <td>
                        <InputText id="statecode" @bind-Value="stateViewModel.Country_.Code" class="form-control"></InputText>
                    </td>
                </tr>
                <br />
                <tr>
                    <td>
                        <label for="statename" class="control-label">
                            State Name
                        </label>
                    </td>
                    <td>
                        <InputText id="statename" @bind-Value="stateViewModel.Country_.Statename" class="form-control"></InputText>
                    </td>
                </tr>
                <br />
                <tr>
                    <td>
                        <label for="Seedsource" class="control-label">
                            Country Flag
                        </label>
                    </td>
                    <td>
                        <InputFile OnChange="@OnInputFileChange" class="form-control" />
                    </td>
                </tr>
                <br />
                <tr>
                    <td></td>
                    <td>
                        <input type="submit" value="Save" class="btn btn-primary col-4" />
                        &#8194;
                        <button type="button" class="btn btn-warning col-4"
                                @onclick="() => Cancel()">
                            &#8194;&#8201;Cancel&#8201;&#8194;
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </EditForm>
    <br />
    <br />
</div>
@if (DialogIsOpen)
{
    <Popup Caption="Edit State"
           Message="@message"
           OnClose="@OnDialogClose"
           Type="Popup.Category.Okay">
    </Popup>
}



@code {
    [Parameter]
    public string StateId { get; set; }

    private byte[] ImgUploaded { set; get; }

    private string firstName;
    private string message;
    private bool DialogIsOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await stateViewModel.GetCountry(StateId);
    }

    private async Task OnInputFileChange(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
            stateViewModel.Country_.Flag = $"data:image/png;base64,{Convert.ToBase64String(ImgUploaded)}";
        }
    }

    private async Task Submit()
    {
        var resp = await stateViewModel.UpdateCountry();
        if (resp)
        {
            OpenDialog();
        }
    }

    private void Cancel()
    {

    }

    private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "State Updated";
    }
    private void OnDialogClose(bool isOk)
    {
        DialogIsOpen = false;
    }

}

