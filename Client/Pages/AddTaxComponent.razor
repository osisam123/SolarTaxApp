@page "/addtax"
@using SolarTaxApp.Client.ViewModels
@inject ITaxViewModel taxViewModel

<div class="col-9">
    <h5>Add Tax Type</h5>
    <EditForm Model="tax" OnSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <table width="100%" cellpadding="0" cellspacing="0" border="0">
            <tbody>
                <tr>
                    <td>
                        <label for="taxcode" class="control-label">
                            Tax Code
                        </label>
                    </td>
                    <td>
                        <InputText id="taxcode" @bind-Value="tax.Taxcode" class="form-control"></InputText>
                    </td>
                </tr>
                <br />
                <tr>
                    <td>
                        <label for="SeedType" class="control-label">
                            Tax Name
                        </label>
                    </td>
                    <td>
                        <InputText id="SeedType" @bind-Value="tax.TaxName" class="form-control"></InputText>
                    </td>
                </tr>
                <br />
                <tr>
                    <td></td>
                    <td>
                        <input type="submit" value="Save" class="btn btn-primary col-4" />
                        &#8194;
                        <button type="button" class="btn btn-warning col-4"
                                @onclick="() => Cancel()">
                            &#8194;&#8201;Cancel&#8201;&#8194;
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </EditForm>
    <br />
    <br />
</div>
@if (DialogIsOpen)
{
    <Popup Caption="Add Tax"
           Message="@message"
           OnClose="@OnDialogClose"
           Type="Popup.Category.Okay">
    </Popup>
}

@code {

    private Tax tax { get; set; }

    private string firstName;
    private string message;
    private bool DialogIsOpen = false;

    protected override void OnInitialized()
    {
        tax = new Tax();
    }


    private void Cancel()
    {

    }

    private async Task Submit()
    {
        taxViewModel.Tax_ = tax;
        var resp = await taxViewModel.InsertTax();
        if (resp)
        {
            OpenDialog();
        }
    }
    private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "Tax Saved";
        tax = new Tax();
    }
    private void OnDialogClose(bool isOk)
    {
        DialogIsOpen = false;
    }
}

