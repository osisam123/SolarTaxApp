@page "/editstatetax/{StateTaxId}"
@using SolarTaxApp.Client.ViewModels
@inject ITaxTreatementViewModel taxTreatementViewModel
@inject IClassificationViewModel classificationViewModel
@inject ITaxViewModel taxViewModel
@inject IStateViewModel stateViewModel
@using BlazorInputFile
@using System.IO

<div class="col-9">
    @if(taxTreatementViewModel.TaxTreatement_ == null)
    {
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else
    { 
        <h5>Edit Tax Treatement</h5>
        <EditForm Model="taxTreatementViewModel.TaxTreatement_" OnSubmit="Submit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <table width="100%" cellpadding="0" cellspacing="0" border="0">
                <tbody>
                    <tr>
                        <td>
                            <label class="control-label">
                                Classification
                            </label>
                        </td>
                        <td>
                            <InputSelect @bind-Value="taxTreatementViewModel.TaxTreatement_.Classificationid" class="form-control">
                                <option value="">Select Category ...</option>
                                @foreach (var classification in classificationViewModel.Classifications)
                                {
                                    <option value="@classification.Classificationid">@classification.Solarmodularcapacity</option>
                                }
                            </InputSelect>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <label class="control-label">
                                Tax Type
                            </label>
                        </td>
                        <td>
                            <InputSelect @bind-Value="taxTreatementViewModel.TaxTreatement_.Taxid" class="form-control">
                                <option value="">Select Category ...</option>
                                @foreach (var tax in taxViewModel.Taxes)
                                {
                                    <option value="@tax.Taxid">@tax.Taxcode</option>
                                }
                            </InputSelect>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <label for="capacity" class="control-label">
                                State Code
                            </label>
                        </td>
                        <td>
                            <InputSelect @bind-Value="taxTreatementViewModel.TaxTreatement_.Stateid" class="form-control">
                                <option value="">Select Category ...</option>
                                @foreach (var state in stateViewModel.Countries)
                                {
                                    <option value="@state.Stateid">@state.Code</option>
                                }
                            </InputSelect>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <label for="hscode" class="control-label">
                               Tax (%)
                            </label>
                        </td>
                        <td>
                            <InputText id="hscode" @bind-Value="taxTreatementViewModel.TaxTreatement_.Taxpercentage" class="form-control"></InputText>
                        </td>
                    </tr>
                    <br />
                
                    <tr>
                        <td></td>
                        <td>
                            <input type="submit" value="Update" class="btn btn-primary col-4" />
                            &#8194;
                            <button type="button" class="btn btn-warning col-4"
                                    @onclick="() => Cancel()">
                                &#8194;&#8201;Cancel&#8201;&#8194;
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </EditForm>
    }
    <br />
    <br />
</div>
@if (DialogIsOpen)
{
    <Popup Caption="Edit Tax Treatement"
           Message="@message"
           OnClose="@OnDialogClose"
           Type="Popup.Category.Okay">
    </Popup>
}


@code {
    [Parameter]
    public string StateTaxId { get; set; }

    private string firstName;
    private string message;
    private bool DialogIsOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await taxTreatementViewModel.GetTaxTreatement(StateTaxId);
        await classificationViewModel.GetClassifications();
        await taxViewModel.GetTaxes();
        await stateViewModel.GetCountries();
    }



    private async Task Submit()
    {
        var resp = await taxTreatementViewModel.UpdateTaxTreatement();
        if (resp)
        {
            OpenDialog();
        }
    }

    private void Cancel()
    {

    }

    private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "Tax Treatement Updated";
    }
    private void OnDialogClose(bool isOk)
    {
        DialogIsOpen = false;
    }
}
