@page "/editcategory/{CategoryId}"
@using SolarTaxApp.Client.ViewModels
@inject ICategoryViewModel CategoryViewModel
@using BlazorInputFile
@using System.IO


<div class="col-9">
    @if(CategoryViewModel.Category == null)
    {
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
    }
    else
    {
        <h5>Edit Category</h5>
        <EditForm Model="CategoryViewModel.Category" OnSubmit="Submit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <table width="100%" cellpadding="0" cellspacing="0" border="0">
                <tbody>
                    <tr>
                        <td>
                            <label for="SeedType" class="control-label">
                                Category Name
                            </label>
                        </td>
                        <td>
                            <InputText id="SeedType" @bind-Value="CategoryViewModel.Category.Categoryname" class="form-control"></InputText>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <label for="description" class="control-label">
                                Category Description
                            </label>
                        </td>
                        <td>
                            <InputText id="description" @bind-Value="CategoryViewModel.Category.CategoryDescription" class="form-control"></InputText>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <label for="Seedsource" class="control-label">
                                Category Image
                            </label>
                        </td>
                        <td>
                            <InputFile OnChange="@OnInputFileChange" class="form-control" />
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td></td>
                        <td>
                            <input type="submit" value="Save" class="btn btn-primary col-4" />
                            &#8194;
                            <button type="button" class="btn btn-warning col-4"
                                    @onclick="() => Cancel()">
                                &#8194;&#8201;Cancel&#8201;&#8194;
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </EditForm>
    }
    
    <br />
    <br />
</div>
@if (DialogIsOpen)
{
    <Popup Caption="Edit Category"
           Message="@message"
           OnClose="@OnDialogClose"
           Type="Popup.Category.Okay">
    </Popup>
}



@code {
    [Parameter]
    public string CategoryId { get; set; }

    private byte[] ImgUploaded { set; get; }

    private string firstName;
    private string message;
    private bool DialogIsOpen = false;

    protected override async Task OnInitializedAsync()
    {
       await CategoryViewModel.GetCategory(CategoryId);
    }

    private async Task OnInputFileChange(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
            CategoryViewModel.Category.Imageurl = $"data:image/png;base64,{Convert.ToBase64String(ImgUploaded)}";
        }
    }

    private async Task Submit()
    {
        var resp = await CategoryViewModel.UpdateCategory();
        if (resp)
        {
            OpenDialog();
        }
    }

    private void Cancel()
    {

    }

    private void OpenDialog()
    {
        DialogIsOpen = true;
        message = "Category Updated";
    }
    private void OnDialogClose(bool isOk)
    {
        DialogIsOpen = false;
    }
}
