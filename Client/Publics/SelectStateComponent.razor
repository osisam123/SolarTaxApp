@layout SelectLayout
@page "/"

@using SolarTaxApp.Client.ViewModels
@inject IStateViewModel stateViewModel
@implements IDisposable
@inject StateContainer StateContainer
@inject NavigationManager navigationManager



@if (stateViewModel.Countries == null)
{
    <div id="preloader">
        <div class='preloader'>
            <span></span>
            <span></span>
            <span></span>
            <span></span>
            <span></span>
            <span></span>
        </div>
    </div>
}
else
{
    <div class="hero-slider">
        <div class="slider-item th-fullpage hero-area" style="background-image: url(img/img_main_1.png);">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 text-center">
                        <h1 data-duration-in=".3" data-animation-in="fadeInUp" data-delay-in=".1">
                            East African Regional Portal
                        </h1>
                        <p data-duration-in=".3" data-animation-in="fadeInUp" data-delay-in=".5">
                            Solar Taxation
                        </p>
                        <div class="row">
                            @foreach (var country in stateViewModel.Countries)
                            {
                                <div class="col-2" @onclick="()=>AssignFocus(country.Stateid,country.Code,country.Flag)" style="">
                                    
                                    <img src="@country.Flag" class="rounded-circle cSelection" />
                                </div>
                            }
                        </div>
                        <p>Select a Country</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

}



@code {

    public string C_Forcus { get; set; }
    public string C_FocusCode { get; set; }
    public string C_Flag { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await stateViewModel.GetCountries();
    }

    private void ChangePropertyValue()
    {
        StateContainer.CountryFocusProperty = C_Forcus;
        StateContainer.FocusCodeProperty = C_FocusCode;
        StateContainer.FlagProperty = C_Flag;

        navigationManager.NavigateTo("searchtax");

    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private void GotTo()
    {
        navigationManager.NavigateTo("/home");
    }

    private void AssignFocus(string countryId, string cCode, string Flag)
    {
        C_Forcus = countryId;
        C_FocusCode = cCode;
        C_Flag = Flag;

        ChangePropertyValue();
        GotTo();
    }

}
